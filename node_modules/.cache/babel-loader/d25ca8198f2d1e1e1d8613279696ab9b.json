{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { CART_ACTION_TYPES } from './cart.types';\nconst INITIAL_STATE = {\n  isCartOpen: false,\n  cartItems: []\n};\nexport const cartSlice = createSlice({\n  name: \"name\",\n  initialState: INITIAL_STATE,\n  reducers: {\n    setCartItems(state, action) {\n      state.cartItems = action.payload;\n    },\n\n    setIsCartOpen(state, action) {\n      state.isCartOpen = action.payload;\n    }\n\n  }\n});\nexport const cartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case CART_ACTION_TYPES.SET_CART_ITEMS:\n      return { ...state,\n        cartItems: payload\n      };\n\n    case CART_ACTION_TYPES.SET_IS_CART_OPEN:\n      return { ...state,\n        isCartOpen: payload\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/erke/workspace/react/crwn-clothing-v2-redux-toolkit/src/store/cart/cart.reducer.js"],"names":["createSlice","CART_ACTION_TYPES","INITIAL_STATE","isCartOpen","cartItems","cartSlice","name","initialState","reducers","setCartItems","state","action","payload","setIsCartOpen","cartReducer","type","SET_CART_ITEMS","SET_IS_CART_OPEN"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,SAASC,iBAAT,QAAkC,cAAlC;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,UAAU,EAAE,KADQ;AAEpBC,EAAAA,SAAS,EAAE;AAFS,CAAtB;AAKA,OAAO,MAAMC,SAAS,GAAGL,WAAW,CAAC;AACnCM,EAAAA,IAAI,EAAE,MAD6B;AAEnCC,EAAAA,YAAY,EAAEL,aAFqB;AAGnCM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,YAAY,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAC1BD,MAAAA,KAAK,CAACN,SAAN,GAAkBO,MAAM,CAACC,OAAzB;AACD,KAHO;;AAIRC,IAAAA,aAAa,CAACH,KAAD,EAAQC,MAAR,EAAgB;AAC3BD,MAAAA,KAAK,CAACP,UAAN,GAAmBQ,MAAM,CAACC,OAA1B;AACD;;AANO;AAHyB,CAAD,CAA7B;AAaP,OAAO,MAAME,WAAW,GAAG,YAAwC;AAAA,MAAvCJ,KAAuC,uEAA/BR,aAA+B;AAAA,MAAhBS,MAAgB,uEAAP,EAAO;AACjE,QAAM;AAAEI,IAAAA,IAAF;AAAQH,IAAAA;AAAR,MAAoBD,MAA1B;;AAEA,UAAQI,IAAR;AACE,SAAKd,iBAAiB,CAACe,cAAvB;AACE,aAAO,EACL,GAAGN,KADE;AAELN,QAAAA,SAAS,EAAEQ;AAFN,OAAP;;AAIF,SAAKX,iBAAiB,CAACgB,gBAAvB;AACE,aAAO,EACL,GAAGP,KADE;AAELP,QAAAA,UAAU,EAAES;AAFP,OAAP;;AAIF;AACE,aAAOF,KAAP;AAZJ;AAcD,CAjBM","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nimport { CART_ACTION_TYPES } from './cart.types';\n\nconst INITIAL_STATE = {\n  isCartOpen: false,\n  cartItems: [],\n};\n\nexport const cartSlice = createSlice({\n  name: \"name\",\n  initialState: INITIAL_STATE,\n  reducers: {\n    setCartItems(state, action) {\n      state.cartItems = action.payload;\n    },\n    setIsCartOpen(state, action) {\n      state.isCartOpen = action.payload;\n    }\n  }\n})\n\nexport const cartReducer = (state = INITIAL_STATE, action = {}) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case CART_ACTION_TYPES.SET_CART_ITEMS:\n      return {\n        ...state,\n        cartItems: payload,\n      };\n    case CART_ACTION_TYPES.SET_IS_CART_OPEN:\n      return {\n        ...state,\n        isCartOpen: payload,\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}