{"ast":null,"code":"var _jsxFileName = \"/home/erke/workspace/react/crwn-clothing-v2-redux-toolkit/src/components/payment-form/payment-form.component.jsx\",\n    _s = $RefreshSig$();\n\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport Button, { BUTTON_TYPE_CLASSES } from '../button/button.component';\nimport { PaymentFormContainer, FormContainer } from './payment-form.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PaymentForm = () => {\n  _s();\n\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const paymentHandler = async e => {\n    e.preventDefault();\n    if (!stripe || !elements) return;\n    const response = await fetch('/.netlify/functions/create-payment-intent', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        amount: 10000\n      })\n    }).then(res => res.json());\n    const clientSecret = response.paymentIntent.client_secret;\n    console.log(clientSecret);\n  };\n\n  return /*#__PURE__*/_jsxDEV(PaymentFormContainer, {\n    children: /*#__PURE__*/_jsxDEV(FormContainer, {\n      onSubmit: paymentHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Credit Card Payment:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        buttonType: BUTTON_TYPE_CLASSES.inverted,\n        children: \"Pay Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PaymentForm, \"EKvoGMX7lxsZ5SGPpYu2aKFzClQ=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = PaymentForm;\nexport default PaymentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"sources":["/home/erke/workspace/react/crwn-clothing-v2-redux-toolkit/src/components/payment-form/payment-form.component.jsx"],"names":["CardElement","useStripe","useElements","Button","BUTTON_TYPE_CLASSES","PaymentFormContainer","FormContainer","PaymentForm","stripe","elements","paymentHandler","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","amount","then","res","json","clientSecret","paymentIntent","client_secret","console","log","inverted"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,WAAjC,QAAoD,yBAApD;AAEA,OAAOC,MAAP,IAAiBC,mBAAjB,QAA2C,4BAA3C;AAEA,SAASC,oBAAT,EAA+BC,aAA/B,QAAoD,uBAApD;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAMC,MAAM,GAAGP,SAAS,EAAxB;AACA,QAAMQ,QAAQ,GAAGP,WAAW,EAA5B;;AAEA,QAAMQ,cAAc,GAAG,MAAOC,CAAP,IAAa;AAClCA,IAAAA,CAAC,CAACC,cAAF;AAEA,QAAI,CAACJ,MAAD,IAAW,CAACC,QAAhB,EAA0B;AAE1B,UAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAAD,EAA8C;AACxEC,MAAAA,MAAM,EAAE,MADgE;AAExEC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAF+D;AAKxEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAf;AALkE,KAA9C,CAAL,CAMpBC,IANoB,CAMfC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EANQ,CAAvB;AAQA,UAAMC,YAAY,GAAGX,QAAQ,CAACY,aAAT,CAAuBC,aAA5C;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,YAAZ;AACD,GAfD;;AAiBA,sBACE,QAAC,oBAAD;AAAA,2BACE,QAAC,aAAD;AAAe,MAAA,QAAQ,EAAEd,cAAzB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,MAAD;AAAQ,QAAA,UAAU,EAAEN,mBAAmB,CAACyB,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA9BD;;GAAMtB,W;UACWN,S,EACEC,W;;;KAFbK,W;AAgCN,eAAeA,WAAf","sourcesContent":["import { CardElement, useStripe, useElements } from '@stripe/react-stripe-js'\n\nimport Button, { BUTTON_TYPE_CLASSES} from '../button/button.component'\n\nimport { PaymentFormContainer, FormContainer } from './payment-form.styles'\n\nconst PaymentForm = () => {\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const paymentHandler = async (e) => {\n    e.preventDefault();\n\n    if (!stripe || !elements) return;\n\n    const response = await fetch('/.netlify/functions/create-payment-intent', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ amount: 10000 })\n    }).then(res => res.json());\n\n    const clientSecret = response.paymentIntent.client_secret;\n    console.log(clientSecret);\n  }\n\n  return (\n    <PaymentFormContainer>\n      <FormContainer onSubmit={paymentHandler}>\n        <h2>Credit Card Payment:</h2>\n        <CardElement />\n        <Button buttonType={BUTTON_TYPE_CLASSES.inverted}>Pay Now</Button>\n      </FormContainer>\n    </PaymentFormContainer>\n  )\n}\n\nexport default PaymentForm;"]},"metadata":{},"sourceType":"module"}