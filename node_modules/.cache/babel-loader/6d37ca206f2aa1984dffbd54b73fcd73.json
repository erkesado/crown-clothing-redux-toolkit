{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { CATEGORIES_ACTION_TYPES } from './category.types';\nconst INITIAL_STATE = {\n  categories: []\n};\nexport const categoriesSlice = createSlice({\n  name: \"category\",\n  initialState: CATEGORIES_INITIAL_STATE\n});\nexport const categoriesReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : CATEGORIES_INITIAL_STATE;\n  let action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case CATEGORIES_ACTION_TYPES.SET_CATEGORIES:\n      return { ...state,\n        categories: payload\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/erke/workspace/react/crwn-clothing-v2-redux-toolkit/src/store/categories/category.reducer.js"],"names":["createSlice","CATEGORIES_ACTION_TYPES","INITIAL_STATE","categories","categoriesSlice","name","initialState","CATEGORIES_INITIAL_STATE","categoriesReducer","state","action","type","payload","SET_CATEGORIES"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,SAASC,uBAAT,QAAwC,kBAAxC;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,UAAU,EAAE;AADQ,CAAtB;AAIA,OAAO,MAAMC,eAAe,GAAGJ,WAAW,CAAC;AACzCK,EAAAA,IAAI,EAAE,UADmC;AAEzCC,EAAAA,YAAY,EAAEC;AAF2B,CAAD,CAAnC;AAKP,OAAO,MAAMC,iBAAiB,GAAG,YAG5B;AAAA,MAFHC,KAEG,uEAFKF,wBAEL;AAAA,MADHG,MACG,uEADM,EACN;AACH,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQC,IAAR;AACE,SAAKV,uBAAuB,CAACY,cAA7B;AACE,aAAO,EAAE,GAAGJ,KAAL;AAAYN,QAAAA,UAAU,EAAES;AAAxB,OAAP;;AACF;AACE,aAAOH,KAAP;AAJJ;AAMD,CAZM","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nimport { CATEGORIES_ACTION_TYPES } from './category.types';\n\nconst INITIAL_STATE = {\n  categories: [],\n};\n\nexport const categoriesSlice = createSlice({\n  name: \"category\",\n  initialState: CATEGORIES_INITIAL_STATE,\n})\n\nexport const categoriesReducer = (\n  state = CATEGORIES_INITIAL_STATE,\n  action = {}\n) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case CATEGORIES_ACTION_TYPES.SET_CATEGORIES:\n      return { ...state, categories: payload };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}